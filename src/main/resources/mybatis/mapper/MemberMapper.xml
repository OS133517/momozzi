<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.oh.momozzi.member.dao.MemberMapper">
    <select id="selectByMemberId" parameterType="String" resultType="MemberDto">
        SELECT
            MEMBER_CODE,
            MEMBER_ID,
            MEMBER_NAME,
            MEMBER_PASSWORD,
            MEMBER_ROLE,
            MEMBER_EMAIL
        FROM TBL_MEMBER
        WHERE MEMBER_ID = #{ memberId }
    </select>
    <select id="selectByEmail" resultType="MemberDto">
        SELECT
            MEMBER_CODE,
            MEMBER_ID,
            MEMBER_NAME,
            MEMBER_PASSWORD,
            MEMBER_ROLE,
            MEMBER_EMAIL
        FROM TBL_MEMBER
        WHERE MEMBER_EMAIL = #{ email }
    </select>
    <select id="findByEmail" resultType="MemberDto">
        SELECT
            MEMBER_CODE,
            MEMBER_ID,
            MEMBER_NAME,
            MEMBER_PASSWORD,
            MEMBER_ROLE,
            MEMBER_EMAIL
        FROM TBL_MEMBER
        WHERE MEMBER_EMAIL = #{ email }
    </select>
    <select id="findByMemberId" resultType="MemberDto">
        SELECT
            MEMBER_CODE,
            MEMBER_ID,
            MEMBER_NAME,
            MEMBER_PASSWORD,
            MEMBER_ROLE,
            MEMBER_EMAIL
        FROM TBL_MEMBER
        WHERE MEMBER_ID = #{ memberId }
    </select>
    <insert id="insertMember" parameterType="MemberDto">
        INSERT INTO TBL_MEMBER
        (
            MEMBER_ID,
            MEMBER_NAME,
            MEMBER_PASSWORD,
            MEMBER_EMAIL
        )
        VALUES
            (
                #{ memberId },
                #{ memberName },
                #{ memberPassword },
                #{ memberEmail }
            )
    </insert>
    <update id="updateMemberInfo" parameterType="MemberDto">
        UPDATE TBL_MEMBER
           SET MEMBER_EMAIL = #{ memberEmail }
             <if test="memberPassword != null and '' != memberPassword">
                 ,MEMBER_PASSWORD = #{ memberPassword }
             </if>
         WHERE MEMBER_CODE = #{ memberCode }
    </update>
    <delete id="deleteMember" parameterType="_long">
        DELETE FROM TBL_MEMBER
         WHERE MEMBER_CODE = #{ memberCode }
    </delete>
    <insert id="insertDeleteMember" parameterType="MemberDto">
        INSERT INTO TBL_DEL_MEMBER
        VALUES
            (
             #{ memberCode },
             #{ memberId },
             #{ memberPassword },
             #{ memberName },
             #{ memberEmail },
             #{ memberRole }
            )
    </insert>
    <select id="selectMyActivityTotal" parameterType="String" resultType="_int">
        SELECT
            COUNT(*)
          FROM TBL_RECIPE
         WHERE MEMBER_CODE = #{ memberCode }
    </select>
    <select id="selectMyRecipeTotal" parameterType="String" resultType="_int">
        SELECT
            COUNT(*)
        FROM TBL_MY_RECIPE
        WHERE MEMBER_CODE = #{ memberCode }
    </select>
    <select id="selectMyActivityWithPaging" parameterType="com.oh.momozzi.common.paging.SelectCriteria" resultType="RecipeDto">
        SELECT
            RECIPE_NO,
            RECIPE_NAME,
            VIEW_NUM,
            THUMBSUP_NUM,
            REG_DATE
          FROM TBL_RECIPE
         WHERE MEMBER_CODE = #{ categoryNo }
         ORDER BY THUMBSUP_NUM
         LIMIT ${ startRow - 1 }, #{ limit }
    </select>
    <select id="selectMyRecipeWithPaging" parameterType="com.oh.momozzi.common.paging.SelectCriteria" resultType="RecipeDto">
        SELECT
            TM.RECIPE_NO,
            TR.RECIPE_NAME,
            TR.INGREDIENTS
          FROM TBL_MY_RECIPE TM
          JOIN TBL_RECIPE TR ON TM.RECIPE_NO = TR.RECIPE_NO
         WHERE TM.MEMBER_CODE = #{ categoryNo }
         LIMIT ${ startRow - 1 }, #{ limit }
    </select>
</mapper>